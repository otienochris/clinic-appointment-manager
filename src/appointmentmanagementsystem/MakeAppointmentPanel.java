/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package appointmentmanagementsystem;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chris
 */
public class MakeAppointmentPanel extends javax.swing.JPanel {

    private final JFrame prevFrame;
    List<String> timeSlots = new ArrayList<>();
    private final String[] headersForTimeSlotsTable = {"ID", "Category", "Date", "Time From", "Time To", "Status"};

    /**
     * Creates new form MakeAppointmentPanel
     *
     * @param currentFrame - the current frame
     */
    public MakeAppointmentPanel(JFrame currentFrame) {
        initComponents();
        this.prevFrame = currentFrame;
        typeCombo.setModel(new DefaultComboBoxModel<>(AppointmentManagementSystem.getEnumNames(AppointmentTypeEnum.class)));

        timeSlotsTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                final int selectedRow = timeSlotsTable.getSelectedRow();
                // 3001<>THERAPY<>2001<>1001<>1002<>PENDING
                final int nextId = AppointmentManagementSystem.getNextId(AppointmentManagementSystem.APPOINTMENT_FILE);
                final String[] timeSlot = timeSlots.get(selectedRow).split(AppointmentManagementSystem.FILE_DELIMITER);
                String newRecord = "\n" + nextId + AppointmentManagementSystem.FILE_DELIMITER
                        + // id
                        timeSlot[4] + AppointmentManagementSystem.FILE_DELIMITER
                        + // category
                        timeSlot[0] + AppointmentManagementSystem.FILE_DELIMITER
                        + // time slot id
                        timeSlot[6] + AppointmentManagementSystem.FILE_DELIMITER
                        + // staff id
                        AppointmentManagementSystem.loggedInUserId + AppointmentManagementSystem.FILE_DELIMITER
                        + // patient id
                        "PENDING"; // status;
                final int confirm = JOptionPane.showConfirmDialog(null, "Make Appointment for " + timeSlot[4] + " scheduled for ", "Appointments", JOptionPane.OK_CANCEL_OPTION);

                if (confirm == 0) {
                    AppointmentManagementSystem.writeLineToFile(AppointmentManagementSystem.APPOINTMENT_FILE, newRecord);
                    JOptionPane.showMessageDialog(null, "Appointment made successfully");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        timeSlotsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtDateFrom = new javax.swing.JTextField();
        dateFrom = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtDateTo = new javax.swing.JTextField();
        dateTo = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1370, 878));
        setMinimumSize(new java.awt.Dimension(1370, 878));
        setPreferredSize(new java.awt.Dimension(1370, 878));

        timeSlotsTable.setBackground(new java.awt.Color(255, 255, 255));
        timeSlotsTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        timeSlotsTable.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        timeSlotsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Category", "Date", "Time From", "Time To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(timeSlotsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 102, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Make Appointment");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 102, 0)));

        typeCombo.setBackground(new java.awt.Color(255, 255, 255));
        typeCombo.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        typeCombo.setForeground(new java.awt.Color(0, 0, 0));
        typeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Monospaced", 2, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("from date:");

        txtDateFrom.setEditable(false);
        txtDateFrom.setBackground(new java.awt.Color(255, 255, 255));
        txtDateFrom.setFont(new java.awt.Font("Monospaced", 2, 18)); // NOI18N
        txtDateFrom.setForeground(new java.awt.Color(0, 0, 0));
        txtDateFrom.setFocusable(false);

        dateFrom.setText("select");
        dateFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFromActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Monospaced", 2, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("to date:");

        txtDateTo.setEditable(false);
        txtDateTo.setBackground(new java.awt.Color(255, 255, 255));
        txtDateTo.setFont(new java.awt.Font("Monospaced", 2, 18)); // NOI18N
        txtDateTo.setForeground(new java.awt.Color(0, 0, 0));
        txtDateTo.setFocusable(false);

        dateTo.setText("select");
        dateTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateToActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(204, 102, 0));
        btnNext.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        btnNext.setText("next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFrom)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1027, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(320, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(1, 1, 1)))
                .addGap(49, 49, 49)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dateFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFromActionPerformed
        // TODO add your handling code here:
        txtDateFrom.setText(new DatePicker(prevFrame).setPickedDate());
    }//GEN-LAST:event_dateFromActionPerformed

    private void dateToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateToActionPerformed
        // TODO add your handling code here:
        txtDateTo.setText(new DatePicker(prevFrame).setPickedDate());
    }//GEN-LAST:event_dateToActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        timeSlots = AppointmentManagementSystem.getData(AppointmentManagementSystem.TIME_SLOTS_TXT_FILE);

        System.out.println(timeSlots.size());
        if (timeSlots.isEmpty()) {

        } else {
            timeSlots.remove(0); // remove the headersForAppointmentTable
            if (timeSlots.isEmpty()) {

            } else {

                String typeChosen = (String) typeCombo.getSelectedItem();
                timeSlots = timeSlots.stream().filter(item -> typeChosen.equalsIgnoreCase(AppointmentTypeEnum.ALL.name()) ? true : item.contains(typeChosen)).collect(Collectors.toList());
                final String dateRangeFrom = txtDateFrom.getText();
                final String dateRangeTo = txtDateTo.getText();

                if (!dateRangeFrom.isEmpty() && !dateRangeTo.isEmpty()) {
                    timeSlots = timeSlots.stream()
                            .filter(item -> {
                                final String date = item.split(AppointmentManagementSystem.FILE_DELIMITER)[2];
                                return AppointmentManagementSystem.isDateBetweenTwoDates(date, dateRangeFrom, dateRangeTo);
                            }).collect(Collectors.toList());
                }

                String[][] tableData = new String[timeSlots.size()][headersForTimeSlotsTable.length];

                int[] count = {0};
                timeSlots.forEach(item -> {
                    String[] i = item.split(AppointmentManagementSystem.FILE_DELIMITER);
                    tableData[count[0]][0] = i[0];
                    tableData[count[0]][1] = i[4]; // category
                    tableData[count[0]][2] = i[2]; // date
                    tableData[count[0]][3] = i[1]; // time from
                    tableData[count[0]][4] = i[3]; // time to
                    tableData[count[0]][5] = i[5]; // status

                    // between dates
                    count[0] += 1;
                });

                DefaultTableModel model = new DefaultTableModel(tableData, headersForTimeSlotsTable);
                timeSlotsTable.setModel(model);
            }
        }
    }//GEN-LAST:event_btnNextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton dateFrom;
    private javax.swing.JButton dateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable timeSlotsTable;
    private javax.swing.JTextField txtDateFrom;
    private javax.swing.JTextField txtDateTo;
    private javax.swing.JComboBox<String> typeCombo;
    // End of variables declaration//GEN-END:variables

}
